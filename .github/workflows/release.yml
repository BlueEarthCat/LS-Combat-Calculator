name: Build and Release

permissions:
  contents: write   # GitHub Release 업로드 허용

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]  # 예: v1.0.0 push 시 빌드
  pull_request:
    branches: [ main ]

jobs:
  # ==========================
  # 🐧 Linux 빌드
  # ==========================
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build and publish for Linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --linux --publish=always

  # ==========================
  # 🪟 Windows 빌드
  # ==========================
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build and publish for Windows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win --publish=always

  # ==========================
  # 🍎 macOS 빌드
  # ==========================
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      # DMG 빌드를 위해 dmg-license 설치 (macOS 전용)
      - name: Install dmg-license (for DMG build)
        run: npm install dmg-license --save-dev

      - name: Build and publish for macOS
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --mac --publish=always

  # ==========================
  # 📦 릴리즈 노트 자동 생성
  # ==========================
  create-release:
    needs: [build-linux, build-windows, build-macos]  # 3개 빌드 모두 완료 후 실행
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            🚀 **Changes in this release**
            - Linux (.deb / .AppImage)
            - Windows (.exe / .msi)
            - macOS (.dmg)
          draft: false
          prerelease: false
